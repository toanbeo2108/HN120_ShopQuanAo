// <auto-generated />
using System;
using HN120_ShopQuanAo.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HN120_ShopQuanAo.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChiTietSp", b =>
                {
                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaMau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTheLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauSacMaMau")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SanPhamMaSp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SizeMaSize")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TheLoaiMaTheLoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("SKU");

                    b.HasIndex("MauSacMaMau");

                    b.HasIndex("SanPhamMaSp");

                    b.HasIndex("SizeMaSize");

                    b.HasIndex("TheLoaiMaTheLoai");

                    b.ToTable("ChiTietSp");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MoTa")
                        .HasColumnType("int");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaGioHang");

                    b.HasIndex("UserID");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHangChiTiet", b =>
                {
                    b.Property<string>("MaGioHangChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTietSpsSKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioHangMaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaGioHangChiTiet");

                    b.HasIndex("ChiTietSpsSKU");

                    b.HasIndex("GioHangMaGioHang");

                    b.ToTable("GioHangChiTiet");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTaoDon")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PhiShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PhuongThucThanhToan")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TongGiaTriHangHoa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VoucherMaVoucher")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("UserID");

                    b.HasIndex("VoucherMaVoucher");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDonChiTiet", b =>
                {
                    b.Property<string>("MaHoaDonChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTietSpsSKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoaDonMaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLuongMua")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDonChiTiet");

                    b.HasIndex("ChiTietSpsSKU");

                    b.HasIndex("HoaDonMaHoaDon");

                    b.ToTable("HoaDonChiTiet");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.MauSac", b =>
                {
                    b.Property<string>("MaMau")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaMau");

                    b.ToTable("MauSac");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.SanPham", b =>
                {
                    b.Property<string>("MaSp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TongSoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaSp");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Size", b =>
                {
                    b.Property<string>("MaSize")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaSize");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.TheLoai", b =>
                {
                    b.Property<string>("MaTheLoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTheLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaTheLoai");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Voucher", b =>
                {
                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("ChietKhau")
                        .HasColumnType("real");

                    b.Property<decimal?>("DieuKien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiamTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaVoucher");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1d30179b-b5ae-4057-bbdf-bcb46943dc31",
                            ConcurrencyStamp = "d6e34489-dec5-4d74-bd3e-eb82949c0d82",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "28d4376e-4e9c-49d5-8c83-e1453b2c818a",
                            ConcurrencyStamp = "8d6a522b-b58f-41ec-9d24-05624d9c28fc",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "2e2a6036-066f-450b-867a-31070808f9e6",
                            ConcurrencyStamp = "92c413e0-4236-447f-a610-37b4210ef358",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChiTietSp", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.MauSac", "MauSac")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("MauSacMaMau");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.SanPham", "SanPham")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("SanPhamMaSp");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.Size", "Size")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("SizeMaSize");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.TheLoai", "TheLoai")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("TheLoaiMaTheLoai");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("Size");

                    b.Navigation("TheLoai");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHang", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.User", "User")
                        .WithMany("GioHangs")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.ChiTietSp", "ChiTietSps")
                        .WithMany("GioHangChiTiet")
                        .HasForeignKey("ChiTietSpsSKU");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangMaGioHang");

                    b.Navigation("ChiTietSps");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDon", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.User", "User")
                        .WithMany("HoaDons")
                        .HasForeignKey("UserID");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("VoucherMaVoucher");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.ChiTietSp", "ChiTietSps")
                        .WithMany("HoaDonChiTiet")
                        .HasForeignKey("ChiTietSpsSKU");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("HoaDonMaHoaDon");

                    b.Navigation("ChiTietSps");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChiTietSp", b =>
                {
                    b.Navigation("GioHangChiTiet");

                    b.Navigation("HoaDonChiTiet");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.MauSac", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Size", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.TheLoai", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.User", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
