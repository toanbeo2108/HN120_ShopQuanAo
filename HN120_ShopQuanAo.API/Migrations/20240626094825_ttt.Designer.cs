// <auto-generated />
using System;
using HN120_ShopQuanAo.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HN120_ShopQuanAo.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240626094825_ttt")]
    partial class ttt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Configurations.HoaDon_History", b =>
                {
                    b.Property<string>("LichSuHoaDonID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoaDonMaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTaoDon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThayDoi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TongGiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LichSuHoaDonID");

                    b.HasIndex("HoaDonMaHoaDon");

                    b.ToTable("HoaDon_History");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChatLieu", b =>
                {
                    b.Property<string>("MaChatLieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaChatLieu");

                    b.ToTable("ChatLieu");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChiTietSp", b =>
                {
                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KhuyenMaiMaKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauSacMaMau")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SanPhamMaSp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SizeMaSize")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UrlAnhSpct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SKU");

                    b.HasIndex("KhuyenMaiMaKhuyenMai");

                    b.HasIndex("MauSacMaMau");

                    b.HasIndex("SanPhamMaSp");

                    b.HasIndex("SizeMaSize");

                    b.ToTable("ChiTietSp");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.DeliveryAddress", b =>
                {
                    b.Property<string>("DeliveryAddressID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryAddressID");

                    b.HasIndex("UserID");

                    b.ToTable("DeliveryAddress");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MoTa")
                        .HasColumnType("int");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaGioHang");

                    b.HasIndex("UserID");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHangChiTiet", b =>
                {
                    b.Property<string>("MaGioHangChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTietSpsSKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioHangMaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaGioHangChiTiet");

                    b.HasIndex("ChiTietSpsSKU");

                    b.HasIndex("GioHangMaGioHang");

                    b.ToTable("GioHangChiTiet");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTaoDon")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PhiShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PhuongThucThanhToan")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TongGiaTriHangHoa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VoucherMaVoucher")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("UserID");

                    b.HasIndex("VoucherMaVoucher");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDonChiTiet", b =>
                {
                    b.Property<string>("MaHoaDonChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTietSpsSKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoaDonMaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLuongMua")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDonChiTiet");

                    b.HasIndex("ChiTietSpsSKU");

                    b.HasIndex("HoaDonMaHoaDon");

                    b.ToTable("HoaDonChiTiet");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.KhuyenMai", b =>
                {
                    b.Property<string>("MaKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PhanTramGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaKhuyenMai");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.MauSac", b =>
                {
                    b.Property<string>("MaMau")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaMau");

                    b.ToTable("MauSac");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.SanPham", b =>
                {
                    b.Property<string>("MaSp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatLieuMaChatLieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mota")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TheLoaiMaTheLoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ThuongHieuMaThuongHieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TongSoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UrlAvatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSp");

                    b.HasIndex("ChatLieuMaChatLieu");

                    b.HasIndex("TheLoaiMaTheLoai");

                    b.HasIndex("ThuongHieuMaThuongHieu");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Size", b =>
                {
                    b.Property<string>("MaSize")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenSize")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaSize");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ThanhToan", b =>
                {
                    b.Property<string>("MaPhuongThuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThayDoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenPhuongThuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaPhuongThuc");

                    b.ToTable("ThanhToan");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ThanhToan_HoaDon", b =>
                {
                    b.Property<string>("MaPhuongThuc_HoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HoaDonMaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaPhuongThuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThayDoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThanhToanMaPhuongThuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaPhuongThuc_HoaDon");

                    b.HasIndex("HoaDonMaHoaDon");

                    b.HasIndex("ThanhToanMaPhuongThuc");

                    b.ToTable("ThanhToan_HoaDon");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.TheLoai", b =>
                {
                    b.Property<string>("MaTheLoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaTheLoai");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ThuongHieu", b =>
                {
                    b.Property<string>("MaThuongHieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaThuongHieu");

                    b.ToTable("ThuongHieu");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.User_Voucher", b =>
                {
                    b.Property<string>("UserVoucherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VoucherMaVoucher")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("UserVoucherID");

                    b.HasIndex("UserID");

                    b.HasIndex("VoucherMaVoucher");

                    b.ToTable("User_Voucher");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Voucher", b =>
                {
                    b.Property<string>("MaVoucher")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("GiaGiamToiDa")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaGiamToiThieu")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaTriGiam")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("KieuGiamGia")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoLuong")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("MaVoucher");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.VoucherHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("GiaGiamToiThieu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaTriGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("KieuGiamGia")
                        .HasColumnType("int");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThayDoi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("VoucherMaVoucher")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("VoucherMaVoucher");

                    b.ToTable("VoucherHistory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dfcbc68f-369c-4aa6-8c48-3b459a4f0e58",
                            ConcurrencyStamp = "3d8cb1a9-a9c9-4a98-a801-9101912e49ed",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9851f21a-8740-440f-bc37-062b9e355929",
                            ConcurrencyStamp = "c6522982-65a5-4d47-8931-6960ea82dfc4",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "0dbb1c68-42c2-43d7-8ec8-56edf2b3cf8d",
                            ConcurrencyStamp = "60db5613-d795-47c4-9e26-d07d72b5b0db",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Configurations.HoaDon_History", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDon_History")
                        .HasForeignKey("HoaDonMaHoaDon");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChiTietSp", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.KhuyenMai", "KhuyenMai")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("KhuyenMaiMaKhuyenMai");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.MauSac", "MauSac")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("MauSacMaMau");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.SanPham", "SanPham")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("SanPhamMaSp");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.Size", "Size")
                        .WithMany("ChiTietSps")
                        .HasForeignKey("SizeMaSize");

                    b.Navigation("KhuyenMai");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.DeliveryAddress", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.User", "User")
                        .WithMany("DeliveryAddress")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHang", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.User", "User")
                        .WithMany("GioHangs")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.ChiTietSp", "ChiTietSps")
                        .WithMany("GioHangChiTiet")
                        .HasForeignKey("ChiTietSpsSKU");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangMaGioHang");

                    b.Navigation("ChiTietSps");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDon", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.User", "User")
                        .WithMany("HoaDons")
                        .HasForeignKey("UserID");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("VoucherMaVoucher");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.ChiTietSp", "ChiTietSps")
                        .WithMany("HoaDonChiTiet")
                        .HasForeignKey("ChiTietSpsSKU");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("HoaDonMaHoaDon");

                    b.Navigation("ChiTietSps");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.SanPham", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.ChatLieu", "ChatLieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("ChatLieuMaChatLieu");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.TheLoai", "TheLoai")
                        .WithMany("SanPhams")
                        .HasForeignKey("TheLoaiMaTheLoai");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("ThuongHieuMaThuongHieu");

                    b.Navigation("ChatLieu");

                    b.Navigation("TheLoai");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ThanhToan_HoaDon", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.HoaDon", "HoaDon")
                        .WithMany("ThanhToan_HoaDons")
                        .HasForeignKey("HoaDonMaHoaDon");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.ThanhToan", "ThanhToan")
                        .WithMany("ThanhToan_HoaDon")
                        .HasForeignKey("ThanhToanMaPhuongThuc");

                    b.Navigation("HoaDon");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.User_Voucher", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.User", "User")
                        .WithMany("User_Vouchers")
                        .HasForeignKey("UserID");

                    b.HasOne("HN120_ShopQuanAo.Data.Models.Voucher", "Voucher")
                        .WithMany("User_Vouchers")
                        .HasForeignKey("VoucherMaVoucher");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.VoucherHistory", b =>
                {
                    b.HasOne("HN120_ShopQuanAo.Data.Models.Voucher", "Voucher")
                        .WithMany("VoucherHistorys")
                        .HasForeignKey("VoucherMaVoucher");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChatLieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ChiTietSp", b =>
                {
                    b.Navigation("GioHangChiTiet");

                    b.Navigation("HoaDonChiTiet");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("HoaDon_History");

                    b.Navigation("ThanhToan_HoaDons");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.KhuyenMai", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.MauSac", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Size", b =>
                {
                    b.Navigation("ChiTietSps");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ThanhToan", b =>
                {
                    b.Navigation("ThanhToan_HoaDon");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.TheLoai", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.Voucher", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("User_Vouchers");

                    b.Navigation("VoucherHistorys");
                });

            modelBuilder.Entity("HN120_ShopQuanAo.Data.Models.User", b =>
                {
                    b.Navigation("DeliveryAddress");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("User_Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
