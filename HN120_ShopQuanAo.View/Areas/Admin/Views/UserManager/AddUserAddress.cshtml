@using HN120_ShopQuanAo.Data.ViewModels;
@model HN120_ShopQuanAo.Data.ViewModels.DeliveryAddressModel
@{
    ViewData["Title"] = "Thêm địa chỉ mới";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .form-container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #ffffff;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    .form-container .form-group {
        margin-bottom: 15px;
    }
    .form-container label {
        font-weight: bold;
    }
    .form-container .form-control {
        border-radius: 4px;
    }
    .form-container .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }
    .form-container .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }
    .form-container .text-danger {
        font-size: 0.875em;
        margin-top: 5px;
    }
</style>
<div class="form-container">
    <form asp-action="AddUserAddress" method="post">
        <div class="form-group">
            <label for="Consignee">Họ và tên</label>
            <input type="text" class="form-control" asp-for="Consignee" name="Consignee" required>
            <span asp-validation-for="Consignee" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="PhoneNumber">Số điện thoại</label>
            <input type="text" class="form-control" asp-for="PhoneNumber" name="PhoneNumber" required>
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="City">Tỉnh/Thành phố</label>
            <select class="form-control" asp-for="City" id="city" name="City" required>
                <option value="" selected>Chọn tỉnh thành</option>
            </select>
            <span asp-validation-for="City" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="District">Quận/Huyện</label>
            <select class="form-control" asp-for="District" id="district" name="District" required>
                <option value="" selected>Chọn quận huyện</option>
            </select>
            <span asp-validation-for="District" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="Ward">Phường/Xã</label>
            <select class="form-control" asp-for="Ward" id="ward" name="Ward" required>
                <option value="" selected>Chọn phường xã</option>
            </select>
            <span asp-validation-for="Ward" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="SpecificAddress">Địa chỉ cụ thể</label>
            <input type="text" class="form-control" asp-for="Street" name="Street" required>
            <span asp-validation-for="Street" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Hoàn thành</button>
        <button type="button" class="btn btn-secondary" onclick="window.history.back()">Trở lại</button>
    </form>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script>
    var notification = localStorage.getItem('notification');
    if (notification) {
        notification = JSON.parse(notification);
        $.notify(notification.message, notification.type);
        localStorage.removeItem('notification');
    }

    var citis = document.getElementById("city");
    var districts = document.getElementById("district");
    var wards = document.getElementById("ward");
    var Parameter = {
        url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
        method: "GET",
        responseType: "application/json",
    };
    var promise = axios(Parameter);
    promise.then(function (result) {
        renderCity(result.data);
    });

    function renderCity(data) {
        for (const x of data) {
            citis.options[citis.options.length] = new Option(x.Name, x.Name);
        }
        citis.onchange = function () {
            districts.length = 1;
            wards.length = 1;
            if (this.value != "") {
                const result = data.filter(n => n.Name === this.value);

                for (const k of result[0].Districts) {
                    districts.options[districts.options.length] = new Option(k.Name, k.Name);
                }
            }
        };
        districts.onchange = function () {
            wards.length = 1;
            const dataCity = data.filter((n) => n.Name === citis.value);
            if (this.value != "") {
                const dataWards = dataCity[0].Districts.filter(n => n.Name === this.value)[0].Wards;

                for (const w of dataWards) {
                    wards.options[wards.options.length] = new Option(w.Name, w.Name);
                }
            }
        };
    }
</script>