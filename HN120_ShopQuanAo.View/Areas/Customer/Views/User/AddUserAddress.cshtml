@using HN120_ShopQuanAo.Data.ViewModels;
@model HN120_ShopQuanAo.Data.ViewModels.DeliveryAddressModel
@{
    ViewData["Title"] = "Thêm địa chỉ mới";
    Layout = "~/Areas/Customer/Views/Shared/_LayoutCustomer.cshtml";
}

<style>
    .form-container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #ffffff;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

        .form-container .form-group {
            margin-bottom: 15px;
        }

        .form-container label {
            font-weight: bold;
        }

        .form-container .form-control {
            border-radius: 4px;
        }

        .form-container .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .form-container .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }

        .form-container .text-danger {
            font-size: 0.875em;
            margin-top: 5px;
        }
</style>
<div class="form-container">
    <form asp-action="AddUserAddress" method="post">
        <div class="form-group">
            <label for="Consignee">Họ và tên</label>
            <input type="text" class="form-control" asp-for="Consignee" name="Consignee" required>
            <span asp-validation-for="Consignee" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="PhoneNumber">Số điện thoại</label>
            <input type="text" class="form-control" asp-for="PhoneNumber" name="PhoneNumber" required>
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="City">Tỉnh/Thành phố</label>
            <select class="form-control" asp-for="City" id="select-city" name="City" required>
                <option value="" selected>Chọn tỉnh thành</option>
            </select>
            <span asp-validation-for="City" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="District">Quận/Huyện</label>
            <select class="form-control" asp-for="District" id="select-district" name="District" required>
                <option value="" selected>Chọn quận huyện</option>
            </select>
            <span asp-validation-for="District" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="Ward">Phường/Xã</label>
            <select class="form-control" asp-for="Ward" id="select-ward" name="Ward" required>
                <option value="" selected>Chọn phường xã</option>
            </select>
            <span asp-validation-for="Ward" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="SpecificAddress">Địa chỉ cụ thể</label>
            <input type="text" class="form-control" asp-for="Street" name="Street" required>
            <span asp-validation-for="Street" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Hoàn thành</button>
        <button type="button" class="btn btn-secondary" onclick="window.history.back()">Trở lại</button>
    </form>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var notification = localStorage.getItem('notification');
            if (notification) {
                notification = JSON.parse(notification);
                $.notify(notification.message, notification.type);
                localStorage.removeItem('notification');
            }

            var citis = document.getElementById("select-city");
            var districts = document.getElementById("select-district");
            var wards = document.getElementById("select-ward");

            var Parameter = {
                url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
                method: "GET",
                responseType: "application/json",
            };

            axios(Parameter).then(function (result) {
                if (result.data && result.data.length > 0) {
                    console.log("API request was successful. Data received:");
                    console.log(result.data);
                    renderCity(result.data);
                } else {
                    console.error("API request succeeded but no data was returned.");
                }
            }).catch(function (error) {
                console.error("API request failed with error:", error);
            });

            function renderCity(data) {
                citis.length = 1;
                districts.length = 1;
                wards.length = 1;

                data.forEach(function (city) {
                    citis.options[citis.options.length] = new Option(city.Name, city.Id);
                });

                citis.onchange = function () {
                    districts.length = 1;
                    wards.length = 1;
                    if (this.value !== "") {
                        const selectedCity = data.find(n => n.Id === this.value);
                        if (selectedCity) {
                            selectedCity.Districts.forEach(function (district) {
                                districts.options[districts.options.length] = new Option(district.Name, district.Id);
                            });
                        }
                    }
                };

                districts.onchange = function () {
                    wards.length = 1;
                    if (this.value !== "") {
                        const selectedCity = data.find(n => n.Id === citis.value);
                        const selectedDistrict = selectedCity.Districts.find(n => n.Id === this.value);
                        if (selectedDistrict) {
                            selectedDistrict.Wards.forEach(function (ward) {
                                wards.options[wards.options.length] = new Option(ward.Name, ward.Id);
                            });
                        }
                    }
                };
            }
        });
    </script>
}